<#@ include file="Project_Variables.biml" #>
<#@ property name="EntityId" type="Int32" #>
<#@ property name="EntityName" type="String" #>
<#@ property name="EntityType" type="String" #>
<#@ property name="EntityTableName" type="String" #>
<#@ property name="EntityNameStaging" type="String" #>
<#@ property name="EntityViewNameStaging" type="String" #>
<#@ property name="ParentEntityId" type="Int32" #>

<#
var EntityViewColumns = MetaAdapter.GetColumns(EntityId, false);
var LookupColumns = MetaAdapter.GetColumns(EntityId, true);

var LookupColumnsBK = MetaAdapter.GetColumns(ParentEntityId, true);
string LookupColumnListBK = MetaAdapter.GetStringColumnList(LookupColumnsBK, false);

string EntityViewColumnList = MetaAdapter.GetStringColumnList(EntityViewColumns, false);

string LookupColumnList = MetaAdapter.GetStringColumnList(LookupColumns, false);
var KeyColumn = LookupColumns.Where(x => x.ReferencedEntityId != 0).First();

string DateRangeEnd = MetaAdapter.GetDateRangeEnd();
#>

<Dataflow Name="DFL <#=EntityType#>_<#=EntityName#>" LoggingMode="Enabled">
                    
	<#=CallBimlScript("Package_Dataflow_LogEvents.biml")#>
        
    <LogProviders>
        <SqlServerLogProvider ConnectionName="<#=LogCatalog#>" Name="SSIS log provider for SQL Server" />
    </LogProviders>
    
    <Annotations>
        <Annotation AnnotationType="Description">Data Flow Task</Annotation>
    </Annotations>
                    
	<Transformations>


	           		<OleDbSource Name="SRC Stg <#=EntityName#>" ConnectionName="<#=StagingCatalog#>">
            			<DirectInput>
            SELECT DISTINCT 
              <#=EntityViewColumnList#>,
              <#=LookupColumnListBK#>
            FROM <#=EntityViewNameStaging#>
            WHERE LoadDate = ?
            ORDER BY <#=KeyColumn.ColumnNameBraket#>
                        </DirectInput>
                        <Parameters>
                            <!--Parameter Name="Parameter0:Input" /!-->
                            <Parameter Name="0" VariableName="User.LoadDate"/>    
                        </Parameters>
                        <Columns>
                            <Column SourceColumn="<#=KeyColumn.ColumnName#>" SortKeyPosition="1" />
                        </Columns>
                    </OleDbSource>	


	
		<OleDbSource Name="SRC Edw <#=EntityName#>" ConnectionName="<#=EDWCatalog#>">
			<DirectInput>
SELECT 
  <#=LookupColumnList#>
FROM <#=EntityTableName#>
WHERE LoadEndDate = '<#=DateRangeEnd#>'
ORDER BY <#=KeyColumn.ColumnNameBraket#>
            </DirectInput>
            <Columns>
                <Column SourceColumn="<#=KeyColumn.ColumnName#>" SortKeyPosition="1" />
                <Column SourceColumn="HashDiff" TargetColumn="Sat_HashDiff" />
            </Columns>
        </OleDbSource>




<#
string InputPath = "SRC Stg " + EntityName + ".Output";

foreach (var item in LookupColumns.Where(x => x.ReferencedEntityId != 0)) 
{
	EntityInfo RefEntity = MetaAdapter.GetEntityInfo(item.ReferencedEntityId);
#>
		<Lookup Name="LKP <#=RefEntity.EntityName#>" NoMatchBehavior="RedirectRowsToNoMatchOutput" OleDbConnectionName="<#=EDWCatalog#>">
			<DirectInput>
SELECT <#=item.ColumnNameBraket#>
FROM <#=RefEntity.EntityTableName#></DirectInput>
			<Parameters>
				<Parameter SourceColumn="<#=item.ColumnName#>" />
			</Parameters>
			<InputPath SsisName="Lookup Input" OutputPathName="<#=InputPath#>" />
			<Inputs>
				<Column SourceColumn="<#=item.ColumnName#>" TargetColumn="<#=item.ColumnName#>" />
			</Inputs>
		</Lookup>

<#
string InputPathNoMatch = "LKP " + RefEntity.EntityName + ".NoMatch";
string LookupErrorTable = MetaAdapter.EntityTableNameLookupError(EntityId, RefEntity.EntityId, string.Empty);
#>
        <OleDbDestination Name="DST Error LKP <#=RefEntity.EntityName#>" ConnectionName="<#=EDWCatalog#>" KeepNulls="true">
        	<InputPath SsisName="OLE DB Destination Input" OutputPathName="<#=InputPathNoMatch#>"/>
        	    <ExternalTableOutput Table="<#=LookupErrorTable#>" />
        </OleDbDestination>

<#
	InputPath = "LKP " + RefEntity.EntityName + ".Match";
}
#>

		
		<MergeJoin Name="MRG <#=EntityName#>" JoinType="LeftOuterJoin">
            <LeftInputPath SsisName="Merge Join Left Input" OutputPathName="<#=InputPath#>">
                <Columns>
<#
foreach (var item in EntityViewColumns)
{
#>
                    <Column SourceColumn="<#=item.ColumnName#>" IsUsed="true" />
<#
}
#>
                </Columns>
            </LeftInputPath>
            
            <RightInputPath SsisName="Merge Join Right Input" OutputPathName="SRC Edw <#=EntityName#>.Output">
                <Columns>
                    <Column SourceColumn="Sat_HashDiff" IsUsed="true" />
                    <Column SourceColumn="<#=KeyColumn.ColumnName#>" IsUsed="false" />
                </Columns>
            </RightInputPath>
            <JoinKeys>
                <JoinKey LeftColumn="<#=KeyColumn.ColumnName#>" RightColumn="<#=KeyColumn.ColumnName#>" />
            </JoinKeys>
        </MergeJoin>
                        
		<ConditionalSplit Name="CON Changed Rows">
            <InputPath SsisName="Conditional Split Input" OutputPathName="MRG <#=EntityName#>.Output" />
            <OutputPaths>
                <OutputPath Name="New or Changed Rows">
                    <Expression>(HashDiff != REPLACENULL(Sat_HashDiff,""))</Expression>
                </OutputPath>
            </OutputPaths>
        </ConditionalSplit>
                        
        <OleDbDestination Name="DST Edw <#=EntityName#>" ConnectionName="<#=EDWCatalog#>" KeepNulls="true">
	        <InputPath SsisName="OLE DB Destination Input" OutputPathName="CON Changed Rows.New or Changed Rows" />
	        <ExternalTableOutput Table="<#=EntityTableName#>" />
        </OleDbDestination>
                  
	</Transformations>
					
    <PrecedenceConstraints>
        <Inputs>
        	<Input OutputPathName="SQL Initialize <#=EntityType#>_<#=EntityName#>.Output" SsisName="Constraint 1" />
        </Inputs>
    </PrecedenceConstraints>
					
</Dataflow>