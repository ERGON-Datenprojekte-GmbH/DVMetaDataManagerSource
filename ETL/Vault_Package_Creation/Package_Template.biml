<#@ include file="Project_Variables.biml" #>
<#@ property name="EntityId" type="Int32" #>

<#
// Retrieve entity info from Meta database using EntityId
EntityInfo entity = MetaAdapter.GetEntityInfo(EntityId);
bool VirtualizedLoadEndDate = MetaAdapter.GetVirtualizedLoadEndDate();
#>

<Package Name="<#=entity.EntityType#>_<#=entity.EntityName#>_Load" ProtectionLevel="EncryptSensitiveWithUserKey" LoggingMode="Enabled">

    <Connections>
<#
foreach (var x in RootNode.Projects.SelectMany(x => x.AllDefinedSuccessors()).OfType<AstConnectionReferenceBaseNode>())
{
    WriteLine(x.GetBiml());
}
#>
    </Connections>

    <Tasks>
        <#=CallBimlScript("Package_Container_SEQ_Initialize.biml")#>
        
        <Container Name="SEQ Main">
                           
            <Annotations>
                <Annotation AnnotationType="Description">Sequence Container</Annotation>
            </Annotations>
        	               
        	<Tasks>	
            
                <#=CallBimlScript("Package_ExecuteSQL_Initialize.biml", entity.EntityType, entity.EntityName)#>
                
<#
string FinalizeInputPath = "DFL " + entity.EntityType + "_"  + entity.EntityName + ".Output";
if (entity.CreateEntity)
{
    switch (entity.EntityType) 
    {
        case "Hub":
#>            
            	<#=CallBimlScript("Package_Dataflow_Entity_Hub.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            break;
        case "Lnk":
            if (entity.IsTLnk)
            {
#>            
            	<#=CallBimlScript("Package_Dataflow_Entity_TLnk.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            }
            else
            {
#>            
            	<#=CallBimlScript("Package_Dataflow_Entity_Lnk.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            }
            break;
        case "SAL":
#>
                <#=CallBimlScript("Package_Dataflow_Entity_SAL.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            break;
        case "Sat":
#>            
            	<#=CallBimlScript("Package_Dataflow_Entity_Sat.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging, entity.ParentEntityId)#>
<#
            if (!VirtualizedLoadEndDate)
            {
                FinalizeInputPath = "SQL Update LoadEndDate.Output";
#>
            	<#=CallBimlScript("Package_ExecuteSQL_UpdateEndDate.biml", entity.EntityType, entity.EntityName)#>
<#
            }
            break;
        case "TSat":
#>            
            	<#=CallBimlScript("Package_Dataflow_Entity_TSat.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            break;
        case "RSat":
#>            
            	<#=CallBimlScript("Package_Dataflow_Entity_RSat.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            break;
        case "Pit":
        case "Br":
#>            
            	<#=CallBimlScript("Package_Dataflow_Entity_Pit.biml", entity.EntityId, entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            break;
        default:
#>
                <#=CallBimlScript("Package_Dataflow_Entity_EMPTY.biml", entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
            break;
    }
}
else
{
#>
                <#=CallBimlScript("Package_Dataflow_Entity_EMPTY.biml", entity.EntityName, entity.EntityType, entity.EntityTableName, entity.EntityNameStaging, entity.EntityViewNameStaging)#>
<#
}
#>

            	<#=CallBimlScript("Package_ExecuteSQL_Finalize.biml", entity.EntityType, entity.EntityName, FinalizeInputPath)#>
            				        
            </Tasks>
                   
            <PrecedenceConstraints>
                <Inputs>
                    <Input OutputPathName="SEQ Initialize.Output" EvaluationValue="Success"/>
                </Inputs>
            </PrecedenceConstraints>
        
        </Container>

        <#=CallBimlScript("Package_Container_SEQ_Finalize.biml")#>

        <#=CallBimlScript("Package_Container_SEQ_Error_Handling.biml")#>
    </Tasks>
    
    <#=CallBimlScript("Package_LogEvents.biml")#>

    <LogProviders>
       <SqlServerLogProvider ConnectionName="<#=LogCatalog#>" Name="SSIS log provider for SQL Server" />
    </LogProviders>
    
    <Variables>
        <Variable DataType="DateTime" Name="LoadDate">1800-01-01</Variable>
    </Variables>

    <#=CallBimlScript("Package_Events.biml")#>

</Package>